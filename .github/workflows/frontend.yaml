name: Frontend to ECR

on:
  push:
    branches:
      - "master"
      - "feat_*"
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Tag for Docker image'
        required: false
        default: 'frontend'

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

      - name: Run build
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push frontend image
        run: |
          IMAGE_TAG="${{ github.event.inputs.image_tag }}"
          if [ -z "$IMAGE_TAG" ]; then
            IMAGE_TAG=frontend
          fi

          docker build -t ${{ secrets.ECR_REGISTRY }}/hazem/frontend:$IMAGE_TAG .
          docker push ${{ secrets.ECR_REGISTRY }}/hazem/frontend:$IMAGE_TAG

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy using Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            cd /app
            sudo docker-compose pull frontend
            sudo docker-compose up -d frontend
          EOF
